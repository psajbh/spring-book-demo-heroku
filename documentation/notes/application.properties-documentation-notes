#spring.sql.init.mode=always
#spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.ddl-auto=none

#spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class.name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/tacmot0?DB_CLOSE_ON_EXIT=FALSE;useSSL=false;
spring.datasource.url=jdbc:mysql://localhost:3306/tacmot0?useSSL=false
spring.datasource.username=root
spring.datasource.password=tester
#spring.sql.init.mode=never
spring.datasource.platform=mysql



#local branch: asus
#spring.datasource.initialization-mode=always
# start: jhart local dev environment
# help: https://www.baeldung.com/spring-boot-h2-database
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/tacmot0?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=tester
#spring.datasource.platform=mysql


# Enable H2 console under http://localhost:8080/console/ for dev purposes
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#data.sql support insures jpa allows population of data.sql  
#spring.jpa.defer-datasource-initialization=true


#H2 database configuration
#spring.datasource.url = jdbc:h2:file:~/testdb;DB_CLOSE_ON_EXIT=FALSE
#spring.h2.console.enabled=false
#spring.h2.console.path=/console/

spring.sql.init.mode=never

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect



############

#git application.properties test to show this file will not be processed as a git file
#main:production properties for reference only
#spring.datasource.url=jdbc:mysql://ba5ff585eb59a8:483f3c7f@us-cdbr-east-06.cleardb.net/heroku_ee18cb5543a28ce?reconnect=true?useSSL=false
#spring.datasource.username=ba5ff585eb59a8
#spring.datasource.password=483f3c7f



#Logging
logging.level.root=WARN
#logging.level.org.springframework=INFO
logging.level.com.jhart=DEBUG
logging.level.com.jhart.aop=TRACE

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false

#https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot
#spring.jpa.open-in-view=true

# ===============================
# = Actuator configurations
# ===============================
#management.endpoint.beans.enabled=true
#management.endpoints.web.exposure.include=beans
#management.endpoints.web.exposure.include=beans
#management.endpoints.web.exposure.include=*



#spring.datasource.continueOnError=true

#session.createSQLQuery("SHUTDOWN").executeUpdate();

By default, data.sql scripts get executed before the Hibernate is initialized.
We need Hibernate to create our tables before inserting the data into them. 
To achieve this, we need to defer the initialization of our data source. 
We'll use the below property to achieve this:
spring.jpa.defer-datasource-initialization=true

